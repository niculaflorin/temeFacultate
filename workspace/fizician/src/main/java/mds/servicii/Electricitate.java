package mds.servicii;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2017-03-30T22:10:33.674+03:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "Electricitate", 
                  wsdlLocation = "http://localhost:8081/fizicianWS/services/Electricitate?wsdl",
                  targetNamespace = "http://servicii.mds") 
public class Electricitate extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://servicii.mds", "Electricitate");
    public final static QName ElectricitateHttpSoap11Endpoint = new QName("http://servicii.mds", "ElectricitateHttpSoap11Endpoint");
    public final static QName ElectricitateHttpEndpoint = new QName("http://servicii.mds", "ElectricitateHttpEndpoint");
    public final static QName ElectricitateHttpSoap12Endpoint = new QName("http://servicii.mds", "ElectricitateHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8081/fizicianWS/services/Electricitate?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Electricitate.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8081/fizicianWS/services/Electricitate?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Electricitate(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Electricitate(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Electricitate() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public Electricitate(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Electricitate(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Electricitate(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns ElectricitatePortType
     */
    @WebEndpoint(name = "ElectricitateHttpSoap11Endpoint")
    public ElectricitatePortType getElectricitateHttpSoap11Endpoint() {
        return super.getPort(ElectricitateHttpSoap11Endpoint, ElectricitatePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ElectricitatePortType
     */
    @WebEndpoint(name = "ElectricitateHttpSoap11Endpoint")
    public ElectricitatePortType getElectricitateHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(ElectricitateHttpSoap11Endpoint, ElectricitatePortType.class, features);
    }


    /**
     *
     * @return
     *     returns ElectricitatePortType
     */
    @WebEndpoint(name = "ElectricitateHttpEndpoint")
    public ElectricitatePortType getElectricitateHttpEndpoint() {
        return super.getPort(ElectricitateHttpEndpoint, ElectricitatePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ElectricitatePortType
     */
    @WebEndpoint(name = "ElectricitateHttpEndpoint")
    public ElectricitatePortType getElectricitateHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(ElectricitateHttpEndpoint, ElectricitatePortType.class, features);
    }


    /**
     *
     * @return
     *     returns ElectricitatePortType
     */
    @WebEndpoint(name = "ElectricitateHttpSoap12Endpoint")
    public ElectricitatePortType getElectricitateHttpSoap12Endpoint() {
        return super.getPort(ElectricitateHttpSoap12Endpoint, ElectricitatePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ElectricitatePortType
     */
    @WebEndpoint(name = "ElectricitateHttpSoap12Endpoint")
    public ElectricitatePortType getElectricitateHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(ElectricitateHttpSoap12Endpoint, ElectricitatePortType.class, features);
    }

}
